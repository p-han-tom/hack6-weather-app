{"version":3,"sources":["WeatherTips.jsx","App.js","reportWebVitals.js","index.js"],"names":["tips","compare","data","this","low","mid","hi","lowColor","midColor","hiColor","lowTitle","midTitle","hiTitle","lowMsg","midMsg","hiMsg","WeatherTips","props","generateWeatherTips","title","msg","color","weatherTips","summary","Object","keys","key","dataType","push","Card","id","Header","style","backgroundColor","Body","startTime","endTime","React","Component","BG","App","setLocation","position","setState","lat","coords","latitude","lon","longitude","undefined","state","getWeather","options","method","url","params","exclude","units","appid","process","self","axios","request","then","response","weather","console","dir","depth","catch","error","parseTime","unixTime","hours","Date","getHours","ampm","updateHeaderClock","currentTime","minutes","getMinutes","seconds","getSeconds","timeString","time","generateHourlyReport","reports","hourlyWeather","hourly","i","OverlayTrigger","placement","overlay","Popover","temp","feels_like","className","background","main","dt","src","icon","alt","fontSize","Math","round","Accordion","defaultActiveKey","Item","pop","humidity","uvi","visibility","wind_speed","summaries","feels_like_high","feels_like_low","j","max","min","navigator","geolocation","getCurrentPosition","setInterval","length","Row","Col","Spinner","animation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d4c233c.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { Row, Col, Card, ListGroup } from \"react-bootstrap\";\r\n\r\nconst tips = {\r\n    \"feels_like_high\": {\r\n        compare: function(data) {\r\n            if (data >= this.low && data <= this.mid) {\r\n                return 0;\r\n            } else if (data >= this.mid && data <= this.hi) {\r\n                return 1;\r\n            } else if (data >= this.hi) {\r\n                return 2;\r\n            } else {\r\n                return -1\r\n            }\r\n        },\r\n        low: 20,\r\n        mid: 25,\r\n        hi: 30,\r\n\r\n        lowColor: \"#bff542\",\r\n        midColor: \"#ff9b3d\",\r\n        hiColor: \"#ff4238\",\r\n\r\n        lowTitle: \"Warm weather\",\r\n        midTitle: \"Hot weather\",\r\n        hiTitle: \"Very hot weather\",\r\n\r\n        lowMsg: `It's going to be a warm here, so don't dress too warm yourself.`,\r\n        midMsg: `It's going to get hot here. Consider wearing short-sleeved, light-weight attire to stay cool. Also, remember to stay hydrated.`,\r\n        hiMsg: `It's going to be very hot here. Here are some tips:\r\n                - Wear loose-fitting, short-sleeved clothes for better air circulation \r\n                - Wear light-coloured fabrics to reflect sunlight\r\n                - Wear natural fibre fabrics such as linen, silk, or cotton since they absorb sweat better than other materials\r\n                - Pack a water bottle to stay hydrated`\r\n    },\r\n    \"feels_like_low\": {\r\n        compare: function(data) {\r\n            if (data <= this.low && data >= this.mid) {\r\n                return 0;\r\n            } else if (data <= this.mid && data >= this.hi) {\r\n                return 1;\r\n            } else if (data <= this.hi) {\r\n                return 2;\r\n            } else {\r\n                return -1\r\n            }\r\n        },\r\n        low: 10,\r\n        mid: 0,\r\n        hi: -10,\r\n\r\n        lowColor: \"#35fcc1\",\r\n        midColor: \"#35cefc\",\r\n        hiColor: \"#3699f5\",\r\n\r\n        lowTitle: \"Cool weather\",\r\n        midTitle: \"Cold weather\",\r\n        hiTitle: \"Very cold weather\",\r\n\r\n        lowMsg: `It's going to be a little chilly here, dress warmly.`,\r\n        midMsg: `It's going to be cold here, dress warmly and remember to wear multiple layers.\r\n                 Wear a hat, gloves, and insulated boots.`,\r\n        hiMsg: `It is extremely cold here. Some tips for staying warm:\r\n                - Wear multiple layers, with inner layers keeping you insulated, dry, and warm\r\n                - Your outer layer should consist of heavy duty clothing that can protect you from rain, wind, and snow\r\n                - Remember to keep your appendages insulated to prevent frostnip and frostbite\r\n                - Try to avoid spending too long outside, pack water to stay hydrated`\r\n    },\r\n    \"humidity\": {\r\n        compare: function(data) {\r\n            if (data >= this.low && data <= this.mid) {\r\n                return 0;\r\n            } else if (data >= this.hi) {\r\n                return 2;\r\n            } else {\r\n                return -1\r\n            }\r\n        },\r\n        low: 0,\r\n        mid: 0.25,\r\n        hi: 0.50,\r\n\r\n        lowColor: \"#bdffc4\",\r\n        midColor: \"#9fd6a4\",\r\n        hiColor: \"#79a37d\",\r\n\r\n        lowTitle: \"Dry conditions\",\r\n        hiTitle: \"Wet conditions\",\r\n\r\n        lowMsg: `dry`,\r\n        hiMsg: `wet`\r\n    },\r\n    \"pop\": {\r\n        compare: function(data) {\r\n            if (data >= this.low && data <= this.mid) {\r\n                return 0;\r\n            } else if (data >= this.mid && data <= this.hi) {\r\n                return 1;\r\n            } else if (data >= this.hi) {\r\n                return 2;\r\n            } else {\r\n                return -1\r\n            }\r\n        },\r\n        low: 0.15,\r\n        mid: 0.5,\r\n        hi: 0.7,\r\n\r\n        lowColor: \"#cfcfcf\",\r\n        midColor: \"#a8a8a8\",\r\n        hiColor: \"#949494\",\r\n\r\n        lowTitle: \"Slight risk of rain\",\r\n        midTitle: \"Medium risk of rain\",\r\n        hiTitle: \"High risk of rain\",\r\n\r\n        lowMsg: `proly won't rain`,\r\n        midMsg: `might rain`,\r\n        hiMsg: `gonna rain`\r\n    },\r\n    \"uvi\": {\r\n        compare: function(data) {\r\n            if (data >= this.mid && data <= this.hi) {\r\n                return 1;\r\n            } else if (data >= this.hi) {\r\n                return 2;\r\n            } else {\r\n                return -1\r\n            }\r\n        },\r\n        mid: 4,\r\n        hi: 7,\r\n\r\n        midColor: \"#fbff7a\",\r\n        hiColor: \"#b854ff\",\r\n\r\n        midTitle: \"mid uvi\",\r\n        hiTitle: \"high uvi\",\r\n\r\n        midMsg: `mid uvi`,\r\n        hiMsg: `high uvi`\r\n    },\r\n    \"visibility\": {\r\n        compare: function(data) {\r\n            if (data <= this.low) {\r\n                return 1;\r\n            } else if (data >= this.low && data <= this.mid) {\r\n                return 2;\r\n            } else {\r\n                return -1\r\n            }\r\n        },\r\n        low: 2500,\r\n        mid: 5000,\r\n\r\n        lowColor: \"#9c9c9c\",\r\n        midColor: \"#c4c4c4\",\r\n\r\n        lowTitle: \"Very low visibility\",\r\n        midTitle: \"Low visibility\",\r\n\r\n        lowMsg: `fog or mist be careful`,\r\n        midMsg: `humidity hazy kinda low visibility`,\r\n\r\n    },\r\n    \"wind_speed\": {\r\n        compare: function(data) {\r\n             if (data >= this.mid && data <= this.hi) {\r\n                return 1;\r\n            } else if (data >= this.hi) {\r\n                return 2;\r\n            } else {\r\n                return -1\r\n            }\r\n        },\r\n        mid: 18,\r\n        hi: 35,\r\n\r\n        midColor: \"#85ff33\",\r\n        hiColor: \"#ffc533\",\r\n\r\n        midTitle: \"Moderately windy\",\r\n        hiTitle: \"High winds\",\r\n\r\n        midMsg: `windy`,\r\n        hiMsg: `Very windy, could get dangerous`\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default class WeatherTips extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    generateWeatherTips = () => {\r\n        let weatherTips = [];\r\n        let title, msg, color;\r\n        const data = this.props.summary;\r\n        for (let key of Object.keys(this.props.summary)) {\r\n            let dataType = tips[key].compare(data[key]);\r\n            if (dataType === 0) {\r\n                title = tips[key].lowTitle;\r\n                msg = tips[key].lowMsg;\r\n                color = tips[key].lowColor;\r\n            } else if (dataType === 1) {\r\n                title = tips[key].midTitle;\r\n                msg = tips[key].midMsg;\r\n                color = tips[key].midColor;\r\n            } else if (dataType === 2) {\r\n                title = tips[key].hiTitle;\r\n                msg = tips[key].hiMsg;\r\n                color = tips[key].hiColor;\r\n            }\r\n\r\n            if (title !== \"\" && dataType !== -1) {\r\n                weatherTips.push(\r\n                    <Card id = \"tipWrapper\">\r\n                        <Card.Header style = {{backgroundColor: color}} id = \"tipHeader\">{title}</Card.Header>\r\n                        <Card.Body id = \"tipBody\">{msg}</Card.Body>\r\n                    </Card>\r\n\r\n                )\r\n            }\r\n\r\n        }\r\n        return weatherTips;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"tipCollection\">\r\n                <div id = \"timeHeader\">{this.props.startTime} to {this.props.endTime}</div>\r\n                {this.generateWeatherTips()}\r\n            </div>\r\n        );\r\n  }\r\n}","import './App.css';\nimport axios from \"axios\"\nimport React from 'react';\n\nimport WeatherTips from './WeatherTips';\n\nimport { Row, Col, Card, ListGroup, Spinner, OverlayTrigger, Popover, Accordion } from 'react-bootstrap';\n\nconst BG = {\n  \"Rain\": \"linear-gradient(rgb(230, 230, 230), rgb(158, 224, 255))\",\n  \"Clear\": \"linear-gradient(rgb(250, 217, 0),  rgb(255, 255, 255))\",\n  \"Clouds\": \"linear-gradient(rgb(223, 223, 223), rgb(235, 235, 235))\",\n  \"Snow\": \"linear-gradient(rgb(147, 221, 255), rgb(134, 209, 253))\"\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      weather: {},\n      lat: undefined,\n      lon: undefined,\n    };\n\n    navigator.geolocation.getCurrentPosition(this.setLocation, () => {/* handle permission denied here */ });\n    setInterval(this.updateHeaderClock, 1000);\n  }\n\n  setLocation = (position) => {\n    this.setState({ lat: position.coords.latitude });\n    this.setState({ lon: position.coords.longitude });\n    if (this.state.lat !== undefined && this.state.lon !== undefined) {\n      this.getWeather();\n    }\n  }\n\n  // BACKEND DO NOT TOUCH\n  getWeather = () => {\n    let options = {\n      method: 'GET',\n      url: 'https://api.openweathermap.org/data/2.5/onecall?',\n      params: {\n        lat: this.state.lat,\n        lon: this.state.lon,\n        exclude: \"current,minutely,daily\",\n        units: \"metric\",\n        appid: process.env.REACT_APP_API_KEY\n      },\n    };\n\n    const self = this;\n    axios.request(options).then(function (response) {\n      self.setState({ weather: response.data });\n      console.dir(response.data, { depth: null });\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  parseTime = (unixTime) => {\n    let hours = new Date(unixTime * 1000).getHours();\n    let ampm = hours > 11 ? \"PM\" : \"AM\";\n    hours = hours < 10 ? \"0\" + hours : hours;\n\n    return hours + \":00 \" + ampm;\n  }\n\n  updateHeaderClock = () => {\n    let currentTime = new Date();\n    let hours = currentTime.getHours();\n    let minutes = currentTime.getMinutes();\n    let seconds = currentTime.getSeconds();\n    let ampm = hours > 11 ? \"PM\" : \"AM\";\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    let timeString =  hours + \":\" + minutes + \":\" + seconds + \" \" + ampm;\n    this.setState({ time: timeString });\n  }\n\n  /*\n  Each hourly weather index looks like this\n  0:\n    clouds: 3 (percentage /100)\n    dew_point: 17.37\n    dt: 1629518400\n    feels_like: 20.24\n    humidity: 85 percentage\n    pop: 0 (0 -> 1 with 1 = 100%)\n    pressure: 1013\n    temp: 19.97 (celsius)\n    uvi: 0\n    visibility: 10000\n    weather: Array(1)\n      0:\n      description: \"clear sky\"\n      icon: \"01n\"\n      id: 800\n      main: \"Clear\"\n    wind_deg: 315\n    wind_gust: 1.52\n    wind_speed: 1.4\n  */\n\n  generateHourlyReport = () => {\n    let reports = [];\n    let hourlyWeather = this.state.weather.hourly;\n\n    for (let i = 0; i < 12; i++) {\n      reports.push(\n        <div id = \"weather-cards\">\n          <OverlayTrigger\n            placement=\"right\"\n            overlay={\n              <Popover>\n                <Popover.Body>\n                  <div>Temperature: {hourlyWeather[i].temp}°C</div>\n                  <div>Feels Like: {hourlyWeather[i].feels_like}°C</div>\n                </Popover.Body>\n              </Popover>\n            }>\n            <Card className=\"hour-cards\">\n              {/* Ternary to automatically adjust any Atmosphere conditions to a cloudy background */}\n              <Card.Header style={{ background: hourlyWeather[i].weather[0].main >= 700 && hourlyWeather[i].weather[0].main < 800 ? BG[hourlyWeather[i].weather[0].main] : BG[\"Clouds\"] }}>\n                <div id=\"hour-header\">{this.parseTime(hourlyWeather[i].dt)}</div>\n                <img id=\"weather-icons\" src={\"http://openweathermap.org/img/wn/\" + hourlyWeather[i].weather[0].icon + \"@2x.png\"} alt=\"\" />\n                <p style={{ fontSize: \"0.75em\" }}>{Math.round(hourlyWeather[i].temp)}°C</p>\n              </Card.Header>\n            </Card>\n          </OverlayTrigger>\n          <Accordion defaultActiveKey='0'>\n            <Accordion.Item>\n              <Accordion.Header>P.O.P: {hourlyWeather[i].pop * 100}%</Accordion.Header>\n              <Accordion.Body>\n                <div>Humidity: {hourlyWeather[i].humidity}%</div>\n                <div>UV Index: {hourlyWeather[i].uvi}</div>\n                <div>Visibility: {hourlyWeather[i].visibility / 1000}km</div>\n                <div>Wind: {hourlyWeather[i].wind_speed}km/h</div>\n              </Accordion.Body>\n            </Accordion.Item>\n          </Accordion>\n        </div>\n      );\n    }\n    return reports;\n  }\n\n  generateWeatherTips = () => {\n    let tips = [];\n    let summaries = [];\n    for (let i = 0; i < 3; i++) {\n      summaries.push(\n        {\n          feels_like_high: -1000,\n          feels_like_low: 1000,\n          humidity: -1000,\n          pop: -1000,\n          uvi: 0,\n          visibility: 0,\n          wind_speed: 0\n        }\n      );\n    }\n    let hourlyWeather = this.state.weather.hourly;\n\n    for (let i = 0; i < 9; i += 4) {\n      for (let j = 0; j < 4; j++) {\n\n        summaries[i / 4].feels_like_high = Math.max(hourlyWeather[i + j].feels_like, summaries[i / 4].feels_like_high);\n        summaries[i / 4].feels_like_low = Math.min(hourlyWeather[i + j].feels_like, summaries[i / 4].feels_like_low);\n        summaries[i / 4].humidity = Math.max(hourlyWeather[i + j].humidity, summaries[i / 4].humidity);\n        summaries[i / 4].pop = Math.max(hourlyWeather[i + j].pop, summaries[i / 4].pop);\n        summaries[i / 4].uvi = Math.max(hourlyWeather[i + j].uvi, summaries[i / 4].uvi);\n        summaries[i / 4].visibility = Math.max(hourlyWeather[i + j].visibility, summaries[i / 4].visibility);\n        summaries[i / 4].wind_speed = Math.max(hourlyWeather[i + j].wind_speed, summaries[i / 4].wind_speed);\n      }\n      tips.push(\n        <WeatherTips\n          summary={summaries[i / 4]}\n          startTime={this.parseTime(hourlyWeather[i].dt)}\n          endTime={this.parseTime(hourlyWeather[i].dt + 60 * 60 * 3)} />\n      )\n    }\n\n    return tips;\n  }\n\n  render() {\n    if (Object.keys(this.state.weather).length > 0) {\n      return (\n        <div id = \"parallax\">\n          {/* HEADER */}\n          <Row>\n            <Col id=\"greeting\">\n              {this.state.time}\n            </Col>\n          </Row>\n\n          {/* ANCHOR: HOURLY REPORT AND WEATHER TIPS */}\n          <Row>\n            {/* Hourly reports for next 12 hours*/}\n            <Col>\n              {this.generateHourlyReport()}\n            </Col>\n\n            {/* Weather tips in four hour intervals */}\n            <Col>\n              {this.generateWeatherTips()}\n            </Col>\n\n          </Row>\n        </div>\n      );\n    } else {\n      return (\n        // Handle loading screen\n        <div id=\"loadingPrompt\"><Spinner animation=\"border\" /><span style={{ fontSize: \"3em\" }}> Loading</span></div>\n      )\n    }\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}